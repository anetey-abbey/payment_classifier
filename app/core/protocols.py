from typing import Any, Dict, Protocol


class PromptProvider(Protocol):
    def get_prompt(self, key: str) -> str: ...
    def get_formatted_prompt(self, key: str, **kwargs: Any) -> str: ...


class MetricsCollector(Protocol):
    def record_request_duration(
        self, model: str, duration_ms: float, success: bool
    ) -> None: ...
    def increment_counter(self, metric: str, tags: Dict[str, str]) -> None: ...


class StructuredLogger(Protocol):
    def info(self, message: str, **kwargs: Any) -> None: ...
    def warning(self, message: str, **kwargs: Any) -> None: ...
    def error(self, message: str, **kwargs: Any) -> None: ...
    def debug(self, message: str, **kwargs: Any) -> None: ...
